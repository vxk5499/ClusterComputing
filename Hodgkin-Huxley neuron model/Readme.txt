This project is aimed at parallelizing the sequential implementation of the Hodgkin-Huxley neuron model. Here the parallelization is implemented using the message passing interface (MPI) model using the MPI_Send() and MPI_Recv() functions. MPI operates on master-slave relationship where the processor with rank 0 is the master and rest all are slaves, the values calculated by the slaves are sent to the master which calculates the final value by summing up the values received. Over here, the parallel code execution time is in-turn compared with the sequential code execution time and the speedup is calculated.

The project requirement states that, if the number of dendrites is equal to the number of slaves, then the required computation will be parallelized only by the slaves. In other cases, computations will be parallelized in both the slaves and master.
In the first case mentioned above each dendrite is processed by a separate processor, this is achieved by replacing the dendrite variable with the rank of the processor being used and the results are send to the master processor to calculate the final values.
In the latter case, each processor including the master is assigned a set of dendrites i.e. the value obtained after dividing the number of dendrites with the number of processors. The remaining dendrites are processed by the master. The intermediate values are sent to the master processor when the values are accumulated to obtain the final output.
Here initially the updated values of y [0] are sent in to all the slaves before the somaparam[2] calculation. So here basically the MPI_Send and MPI_Recv commands are used for sending and receiving the y [0] and somaparam[2] values.